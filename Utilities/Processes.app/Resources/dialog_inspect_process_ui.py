# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file './dialog_inspect_process.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_InspectProcess(object):
    def setupUi(self, InspectProcess):
        InspectProcess.setObjectName("InspectProcess")
        InspectProcess.resize(727, 486)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(InspectProcess.sizePolicy().hasHeightForWidth())
        InspectProcess.setSizePolicy(sizePolicy)
        InspectProcess.setMaximumSize(QtCore.QSize(16777215, 16777215))
        InspectProcess.setBaseSize(QtCore.QSize(0, 0))
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(InspectProcess)
        self.verticalLayout_2.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.procress_group_id_label = QtWidgets.QLabel(InspectProcess)
        self.procress_group_id_label.setObjectName("procress_group_id_label")
        self.gridLayout.addWidget(self.procress_group_id_label, 1, 1, 1, 1, QtCore.Qt.AlignLeft)
        self.cpu_percent_value = QtWidgets.QLabel(InspectProcess)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cpu_percent_value.sizePolicy().hasHeightForWidth())
        self.cpu_percent_value.setSizePolicy(sizePolicy)
        self.cpu_percent_value.setText("")
        self.cpu_percent_value.setObjectName("cpu_percent_value")
        self.gridLayout.addWidget(self.cpu_percent_value, 2, 2, 1, 1)
        self.parent_process_value = QtWidgets.QLabel(InspectProcess)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.parent_process_value.sizePolicy().hasHeightForWidth())
        self.parent_process_value.setSizePolicy(sizePolicy)
        self.parent_process_value.setText("")
        self.parent_process_value.setObjectName("parent_process_value")
        self.gridLayout.addWidget(self.parent_process_value, 0, 2, 1, 1)
        self.user_label = QtWidgets.QLabel(InspectProcess)
        self.user_label.setObjectName("user_label")
        self.gridLayout.addWidget(self.user_label, 0, 4, 1, 1, QtCore.Qt.AlignLeft)
        self.memory_percent_value = QtWidgets.QLabel(InspectProcess)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.memory_percent_value.sizePolicy().hasHeightForWidth())
        self.memory_percent_value.setSizePolicy(sizePolicy)
        self.memory_percent_value.setBaseSize(QtCore.QSize(0, 0))
        self.memory_percent_value.setText("")
        self.memory_percent_value.setObjectName("memory_percent_value")
        self.gridLayout.addWidget(self.memory_percent_value, 2, 5, 1, 1)
        self.parent_process_label = QtWidgets.QLabel(InspectProcess)
        self.parent_process_label.setObjectName("parent_process_label")
        self.gridLayout.addWidget(self.parent_process_label, 0, 1, 1, 1, QtCore.Qt.AlignLeft)
        self.process_group_id_value = QtWidgets.QLabel(InspectProcess)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.process_group_id_value.sizePolicy().hasHeightForWidth())
        self.process_group_id_value.setSizePolicy(sizePolicy)
        self.process_group_id_value.setText("")
        self.process_group_id_value.setObjectName("process_group_id_value")
        self.gridLayout.addWidget(self.process_group_id_value, 1, 2, 1, 1)
        self.user_value = QtWidgets.QLabel(InspectProcess)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.user_value.sizePolicy().hasHeightForWidth())
        self.user_value.setSizePolicy(sizePolicy)
        self.user_value.setText("")
        self.user_value.setObjectName("user_value")
        self.gridLayout.addWidget(self.user_value, 0, 5, 1, 1)
        self.cpu_percent_label = QtWidgets.QLabel(InspectProcess)
        self.cpu_percent_label.setObjectName("cpu_percent_label")
        self.gridLayout.addWidget(self.cpu_percent_label, 2, 1, 1, 1, QtCore.Qt.AlignLeft)
        self.memory_percent_label = QtWidgets.QLabel(InspectProcess)
        self.memory_percent_label.setObjectName("memory_percent_label")
        self.gridLayout.addWidget(self.memory_percent_label, 2, 4, 1, 1, QtCore.Qt.AlignLeft)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem, 0, 3, 1, 1)
        self.tabWidget = QtWidgets.QTabWidget(InspectProcess)
        self.tabWidget.setStyleSheet("QTabWidget::tab-bar {\n"
"        alignment: center;\n"
"        }\n"
"        QTabWidget::pane { /* The tab widget frame */\n"
"        position: absolute;\n"
"        top: -0.9em;\n"
"        }")
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget.setObjectName("tabWidget")
        self.tab_Memory = QtWidgets.QWidget()
        self.tab_Memory.setObjectName("tab_Memory")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.tab_Memory)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setContentsMargins(20, 30, 20, 20)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        spacerItem1 = QtWidgets.QSpacerItem(20, 0, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_2.addItem(spacerItem1, 6, 0, 1, 1)
        self.data_resident_set_size_label = QtWidgets.QLabel(self.tab_Memory)
        self.data_resident_set_size_label.setObjectName("data_resident_set_size_label")
        self.gridLayout_2.addWidget(self.data_resident_set_size_label, 4, 0, 1, 1)
        self.text_resitent_set_size_label = QtWidgets.QLabel(self.tab_Memory)
        self.text_resitent_set_size_label.setObjectName("text_resitent_set_size_label")
        self.gridLayout_2.addWidget(self.text_resitent_set_size_label, 3, 0, 1, 1)
        self.data_resident_set_size_value = QtWidgets.QLabel(self.tab_Memory)
        self.data_resident_set_size_value.setMinimumSize(QtCore.QSize(20, 0))
        self.data_resident_set_size_value.setText("")
        self.data_resident_set_size_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.data_resident_set_size_value.setObjectName("data_resident_set_size_value")
        self.gridLayout_2.addWidget(self.data_resident_set_size_value, 4, 1, 1, 1)
        self.resident_set_size_value = QtWidgets.QLabel(self.tab_Memory)
        self.resident_set_size_value.setMinimumSize(QtCore.QSize(20, 0))
        self.resident_set_size_value.setText("")
        self.resident_set_size_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.resident_set_size_value.setObjectName("resident_set_size_value")
        self.gridLayout_2.addWidget(self.resident_set_size_value, 1, 1, 1, 1)
        self.virtual_memory_size_label = QtWidgets.QLabel(self.tab_Memory)
        self.virtual_memory_size_label.setObjectName("virtual_memory_size_label")
        self.gridLayout_2.addWidget(self.virtual_memory_size_label, 2, 0, 1, 1)
        self.text_resitent_set_size_value = QtWidgets.QLabel(self.tab_Memory)
        self.text_resitent_set_size_value.setMinimumSize(QtCore.QSize(20, 0))
        self.text_resitent_set_size_value.setText("")
        self.text_resitent_set_size_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.text_resitent_set_size_value.setObjectName("text_resitent_set_size_value")
        self.gridLayout_2.addWidget(self.text_resitent_set_size_value, 3, 1, 1, 1)
        self.virtual_memory_size_value = QtWidgets.QLabel(self.tab_Memory)
        self.virtual_memory_size_value.setMinimumSize(QtCore.QSize(20, 0))
        self.virtual_memory_size_value.setText("")
        self.virtual_memory_size_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.virtual_memory_size_value.setObjectName("virtual_memory_size_value")
        self.gridLayout_2.addWidget(self.virtual_memory_size_value, 2, 1, 1, 1)
        self.resident_set_size_label = QtWidgets.QLabel(self.tab_Memory)
        self.resident_set_size_label.setObjectName("resident_set_size_label")
        self.gridLayout_2.addWidget(self.resident_set_size_label, 1, 0, 1, 1)
        self.stack_size_label = QtWidgets.QLabel(self.tab_Memory)
        self.stack_size_label.setObjectName("stack_size_label")
        self.gridLayout_2.addWidget(self.stack_size_label, 5, 0, 1, 1)
        self.stack_size_value = QtWidgets.QLabel(self.tab_Memory)
        self.stack_size_value.setMinimumSize(QtCore.QSize(20, 0))
        self.stack_size_value.setText("")
        self.stack_size_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.stack_size_value.setObjectName("stack_size_value")
        self.gridLayout_2.addWidget(self.stack_size_value, 5, 1, 1, 1)
        self.horizontalLayout_2.addLayout(self.gridLayout_2)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem2)
        self.gridLayout_3 = QtWidgets.QGridLayout()
        self.gridLayout_3.setContentsMargins(0, 0, -1, -1)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.swapped_size_value = QtWidgets.QLabel(self.tab_Memory)
        self.swapped_size_value.setMinimumSize(QtCore.QSize(20, 0))
        self.swapped_size_value.setText("")
        self.swapped_size_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.swapped_size_value.setObjectName("swapped_size_value")
        self.gridLayout_3.addWidget(self.swapped_size_value, 4, 1, 1, 1)
        self.shared_libraries_size_value = QtWidgets.QLabel(self.tab_Memory)
        self.shared_libraries_size_value.setMinimumSize(QtCore.QSize(20, 0))
        self.shared_libraries_size_value.setText("")
        self.shared_libraries_size_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.shared_libraries_size_value.setObjectName("shared_libraries_size_value")
        self.gridLayout_3.addWidget(self.shared_libraries_size_value, 2, 1, 1, 1)
        self.proportional_set_size_value = QtWidgets.QLabel(self.tab_Memory)
        self.proportional_set_size_value.setMinimumSize(QtCore.QSize(20, 0))
        self.proportional_set_size_value.setText("")
        self.proportional_set_size_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.proportional_set_size_value.setObjectName("proportional_set_size_value")
        self.gridLayout_3.addWidget(self.proportional_set_size_value, 3, 1, 1, 1)
        self.swapped_size_label = QtWidgets.QLabel(self.tab_Memory)
        self.swapped_size_label.setObjectName("swapped_size_label")
        self.gridLayout_3.addWidget(self.swapped_size_label, 4, 0, 1, 1)
        self.shared_libraries_size_label = QtWidgets.QLabel(self.tab_Memory)
        self.shared_libraries_size_label.setObjectName("shared_libraries_size_label")
        self.gridLayout_3.addWidget(self.shared_libraries_size_label, 2, 0, 1, 1)
        self.shared_memory_size_label = QtWidgets.QLabel(self.tab_Memory)
        self.shared_memory_size_label.setObjectName("shared_memory_size_label")
        self.gridLayout_3.addWidget(self.shared_memory_size_label, 1, 0, 1, 1)
        self.shared_memory_size_value = QtWidgets.QLabel(self.tab_Memory)
        self.shared_memory_size_value.setMinimumSize(QtCore.QSize(20, 0))
        self.shared_memory_size_value.setText("")
        self.shared_memory_size_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.shared_memory_size_value.setObjectName("shared_memory_size_value")
        self.gridLayout_3.addWidget(self.shared_memory_size_value, 1, 1, 1, 1)
        self.proportional_set_size_label = QtWidgets.QLabel(self.tab_Memory)
        self.proportional_set_size_label.setObjectName("proportional_set_size_label")
        self.gridLayout_3.addWidget(self.proportional_set_size_label, 3, 0, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(20, 0, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_3.addItem(spacerItem3, 5, 0, 1, 1)
        self.unique_set_size_label = QtWidgets.QLabel(self.tab_Memory)
        self.unique_set_size_label.setObjectName("unique_set_size_label")
        self.gridLayout_3.addWidget(self.unique_set_size_label, 0, 0, 1, 1)
        self.unique_set_size_value = QtWidgets.QLabel(self.tab_Memory)
        self.unique_set_size_value.setMinimumSize(QtCore.QSize(20, 0))
        self.unique_set_size_value.setToolTip("")
        self.unique_set_size_value.setText("")
        self.unique_set_size_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.unique_set_size_value.setObjectName("unique_set_size_value")
        self.gridLayout_3.addWidget(self.unique_set_size_value, 0, 1, 1, 1)
        self.horizontalLayout_2.addLayout(self.gridLayout_3)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem4)
        self.horizontalLayout_3.addLayout(self.horizontalLayout_2)
        self.tabWidget.addTab(self.tab_Memory, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.tab)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setContentsMargins(20, 30, 20, 20)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.gridLayout_4 = QtWidgets.QGridLayout()
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.cpu_time = QtWidgets.QLabel(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.cpu_time.sizePolicy().hasHeightForWidth())
        self.cpu_time.setSizePolicy(sizePolicy)
        self.cpu_time.setObjectName("cpu_time")
        self.gridLayout_4.addWidget(self.cpu_time, 2, 0, 1, 1)
        self.status = QtWidgets.QLabel(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.status.sizePolicy().hasHeightForWidth())
        self.status.setSizePolicy(sizePolicy)
        self.status.setObjectName("status")
        self.gridLayout_4.addWidget(self.status, 4, 0, 1, 1)
        self.context_switches = QtWidgets.QLabel(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.context_switches.sizePolicy().hasHeightForWidth())
        self.context_switches.setSizePolicy(sizePolicy)
        self.context_switches.setObjectName("context_switches")
        self.gridLayout_4.addWidget(self.context_switches, 3, 0, 1, 1)
        spacerItem5 = QtWidgets.QSpacerItem(20, 0, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.MinimumExpanding)
        self.gridLayout_4.addItem(spacerItem5, 7, 0, 1, 1)
        self.threads_number_value = QtWidgets.QLabel(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.threads_number_value.sizePolicy().hasHeightForWidth())
        self.threads_number_value.setSizePolicy(sizePolicy)
        self.threads_number_value.setMinimumSize(QtCore.QSize(20, 0))
        self.threads_number_value.setText("")
        self.threads_number_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.threads_number_value.setObjectName("threads_number_value")
        self.gridLayout_4.addWidget(self.threads_number_value, 0, 1, 1, 1)
        self.cpu_time_value = QtWidgets.QLabel(self.tab)
        self.cpu_time_value.setMinimumSize(QtCore.QSize(20, 0))
        self.cpu_time_value.setText("")
        self.cpu_time_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.cpu_time_value.setObjectName("cpu_time_value")
        self.gridLayout_4.addWidget(self.cpu_time_value, 2, 1, 1, 1)
        self.threads_number = QtWidgets.QLabel(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.threads_number.sizePolicy().hasHeightForWidth())
        self.threads_number.setSizePolicy(sizePolicy)
        self.threads_number.setObjectName("threads_number")
        self.gridLayout_4.addWidget(self.threads_number, 0, 0, 1, 1)
        self.nice_value = QtWidgets.QLabel(self.tab)
        self.nice_value.setMinimumSize(QtCore.QSize(20, 0))
        self.nice_value.setText("")
        self.nice_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.nice_value.setObjectName("nice_value")
        self.gridLayout_4.addWidget(self.nice_value, 5, 1, 1, 1)
        self.context_switches_value = QtWidgets.QLabel(self.tab)
        self.context_switches_value.setMinimumSize(QtCore.QSize(20, 0))
        self.context_switches_value.setText("")
        self.context_switches_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.context_switches_value.setObjectName("context_switches_value")
        self.gridLayout_4.addWidget(self.context_switches_value, 3, 1, 1, 1)
        self.nice = QtWidgets.QLabel(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.nice.sizePolicy().hasHeightForWidth())
        self.nice.setSizePolicy(sizePolicy)
        self.nice.setObjectName("nice")
        self.gridLayout_4.addWidget(self.nice, 5, 0, 1, 1)
        self.fault = QtWidgets.QLabel(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.fault.sizePolicy().hasHeightForWidth())
        self.fault.setSizePolicy(sizePolicy)
        self.fault.setObjectName("fault")
        self.gridLayout_4.addWidget(self.fault, 6, 0, 1, 1)
        self.ports = QtWidgets.QLabel(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ports.sizePolicy().hasHeightForWidth())
        self.ports.setSizePolicy(sizePolicy)
        self.ports.setObjectName("ports")
        self.gridLayout_4.addWidget(self.ports, 1, 0, 1, 1)
        self.status_value = QtWidgets.QLabel(self.tab)
        self.status_value.setMinimumSize(QtCore.QSize(20, 0))
        self.status_value.setText("")
        self.status_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.status_value.setObjectName("status_value")
        self.gridLayout_4.addWidget(self.status_value, 4, 1, 1, 1)
        self.fault_value = QtWidgets.QLabel(self.tab)
        self.fault_value.setMinimumSize(QtCore.QSize(20, 0))
        self.fault_value.setText("")
        self.fault_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.fault_value.setObjectName("fault_value")
        self.gridLayout_4.addWidget(self.fault_value, 6, 1, 1, 1)
        self.ports_value = QtWidgets.QLabel(self.tab)
        self.ports_value.setMinimumSize(QtCore.QSize(20, 0))
        self.ports_value.setText("")
        self.ports_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.ports_value.setObjectName("ports_value")
        self.gridLayout_4.addWidget(self.ports_value, 1, 1, 1, 1)
        self.horizontalLayout_7.addLayout(self.gridLayout_4)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_7.addItem(spacerItem6)
        self.gridLayout_5 = QtWidgets.QGridLayout()
        self.gridLayout_5.setContentsMargins(0, 0, -1, -1)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.file_descriptors_value = QtWidgets.QLabel(self.tab)
        self.file_descriptors_value.setMinimumSize(QtCore.QSize(20, 0))
        self.file_descriptors_value.setText("")
        self.file_descriptors_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.file_descriptors_value.setObjectName("file_descriptors_value")
        self.gridLayout_5.addWidget(self.file_descriptors_value, 9, 1, 1, 1)
        self.other_bytes = QtWidgets.QLabel(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.other_bytes.sizePolicy().hasHeightForWidth())
        self.other_bytes.setSizePolicy(sizePolicy)
        self.other_bytes.setObjectName("other_bytes")
        self.gridLayout_5.addWidget(self.other_bytes, 8, 0, 1, 1)
        spacerItem7 = QtWidgets.QSpacerItem(20, 0, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.MinimumExpanding)
        self.gridLayout_5.addItem(spacerItem7, 10, 0, 1, 1)
        self.write_chars_value = QtWidgets.QLabel(self.tab)
        self.write_chars_value.setMinimumSize(QtCore.QSize(20, 0))
        self.write_chars_value.setText("")
        self.write_chars_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.write_chars_value.setObjectName("write_chars_value")
        self.gridLayout_5.addWidget(self.write_chars_value, 6, 1, 1, 1)
        self.pageins = QtWidgets.QLabel(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pageins.sizePolicy().hasHeightForWidth())
        self.pageins.setSizePolicy(sizePolicy)
        self.pageins.setObjectName("pageins")
        self.gridLayout_5.addWidget(self.pageins, 0, 0, 1, 1)
        self.pageins_value = QtWidgets.QLabel(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pageins_value.sizePolicy().hasHeightForWidth())
        self.pageins_value.setSizePolicy(sizePolicy)
        self.pageins_value.setMinimumSize(QtCore.QSize(20, 0))
        self.pageins_value.setText("")
        self.pageins_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.pageins_value.setObjectName("pageins_value")
        self.gridLayout_5.addWidget(self.pageins_value, 0, 1, 1, 1)
        self.write_count = QtWidgets.QLabel(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.write_count.sizePolicy().hasHeightForWidth())
        self.write_count.setSizePolicy(sizePolicy)
        self.write_count.setObjectName("write_count")
        self.gridLayout_5.addWidget(self.write_count, 2, 0, 1, 1)
        self.read_chars = QtWidgets.QLabel(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.read_chars.sizePolicy().hasHeightForWidth())
        self.read_chars.setSizePolicy(sizePolicy)
        self.read_chars.setObjectName("read_chars")
        self.gridLayout_5.addWidget(self.read_chars, 5, 0, 1, 1)
        self.write_count_value = QtWidgets.QLabel(self.tab)
        self.write_count_value.setMinimumSize(QtCore.QSize(20, 0))
        self.write_count_value.setText("")
        self.write_count_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.write_count_value.setObjectName("write_count_value")
        self.gridLayout_5.addWidget(self.write_count_value, 2, 1, 1, 1)
        self.file_descriptors = QtWidgets.QLabel(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.file_descriptors.sizePolicy().hasHeightForWidth())
        self.file_descriptors.setSizePolicy(sizePolicy)
        self.file_descriptors.setObjectName("file_descriptors")
        self.gridLayout_5.addWidget(self.file_descriptors, 9, 0, 1, 1)
        self.read_bytes_value = QtWidgets.QLabel(self.tab)
        self.read_bytes_value.setMinimumSize(QtCore.QSize(20, 0))
        self.read_bytes_value.setText("")
        self.read_bytes_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.read_bytes_value.setObjectName("read_bytes_value")
        self.gridLayout_5.addWidget(self.read_bytes_value, 3, 1, 1, 1)
        self.other_count = QtWidgets.QLabel(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.other_count.sizePolicy().hasHeightForWidth())
        self.other_count.setSizePolicy(sizePolicy)
        self.other_count.setObjectName("other_count")
        self.gridLayout_5.addWidget(self.other_count, 7, 0, 1, 1)
        self.other_bytes_value = QtWidgets.QLabel(self.tab)
        self.other_bytes_value.setMinimumSize(QtCore.QSize(20, 0))
        self.other_bytes_value.setText("")
        self.other_bytes_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.other_bytes_value.setObjectName("other_bytes_value")
        self.gridLayout_5.addWidget(self.other_bytes_value, 8, 1, 1, 1)
        self.write_bytes_value = QtWidgets.QLabel(self.tab)
        self.write_bytes_value.setMinimumSize(QtCore.QSize(20, 0))
        self.write_bytes_value.setText("")
        self.write_bytes_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.write_bytes_value.setObjectName("write_bytes_value")
        self.gridLayout_5.addWidget(self.write_bytes_value, 4, 1, 1, 1)
        self.read_bytes = QtWidgets.QLabel(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.read_bytes.sizePolicy().hasHeightForWidth())
        self.read_bytes.setSizePolicy(sizePolicy)
        self.read_bytes.setObjectName("read_bytes")
        self.gridLayout_5.addWidget(self.read_bytes, 3, 0, 1, 1)
        self.read_count_value = QtWidgets.QLabel(self.tab)
        self.read_count_value.setMinimumSize(QtCore.QSize(20, 0))
        self.read_count_value.setText("")
        self.read_count_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.read_count_value.setObjectName("read_count_value")
        self.gridLayout_5.addWidget(self.read_count_value, 1, 1, 1, 1)
        self.other_count_value = QtWidgets.QLabel(self.tab)
        self.other_count_value.setMinimumSize(QtCore.QSize(20, 0))
        self.other_count_value.setText("")
        self.other_count_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.other_count_value.setObjectName("other_count_value")
        self.gridLayout_5.addWidget(self.other_count_value, 7, 1, 1, 1)
        self.write_chars = QtWidgets.QLabel(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.write_chars.sizePolicy().hasHeightForWidth())
        self.write_chars.setSizePolicy(sizePolicy)
        self.write_chars.setObjectName("write_chars")
        self.gridLayout_5.addWidget(self.write_chars, 6, 0, 1, 1)
        self.write_bytes = QtWidgets.QLabel(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.write_bytes.sizePolicy().hasHeightForWidth())
        self.write_bytes.setSizePolicy(sizePolicy)
        self.write_bytes.setObjectName("write_bytes")
        self.gridLayout_5.addWidget(self.write_bytes, 4, 0, 1, 1)
        self.read_count = QtWidgets.QLabel(self.tab)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.read_count.sizePolicy().hasHeightForWidth())
        self.read_count.setSizePolicy(sizePolicy)
        self.read_count.setObjectName("read_count")
        self.gridLayout_5.addWidget(self.read_count, 1, 0, 1, 1)
        self.read_chars_value = QtWidgets.QLabel(self.tab)
        self.read_chars_value.setMinimumSize(QtCore.QSize(20, 0))
        self.read_chars_value.setText("")
        self.read_chars_value.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.read_chars_value.setObjectName("read_chars_value")
        self.gridLayout_5.addWidget(self.read_chars_value, 5, 1, 1, 1)
        self.horizontalLayout_7.addLayout(self.gridLayout_5)
        spacerItem8 = QtWidgets.QSpacerItem(0, 20, QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_7.addItem(spacerItem8)
        self.horizontalLayout_8.addLayout(self.horizontalLayout_7)
        self.tabWidget.addTab(self.tab, "")
        self.tab_Maps = QtWidgets.QWidget()
        self.tab_Maps.setObjectName("tab_Maps")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.tab_Maps)
        self.horizontalLayout_4.setContentsMargins(20, 30, 20, 20)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.MapsTreeView = QtWidgets.QTreeView(self.tab_Maps)
        self.MapsTreeView.setUniformRowHeights(True)
        self.MapsTreeView.setSortingEnabled(True)
        self.MapsTreeView.setObjectName("MapsTreeView")
        self.horizontalLayout_4.addWidget(self.MapsTreeView)
        self.tabWidget.addTab(self.tab_Maps, "")
        self.tab_OpenFiles = QtWidgets.QWidget()
        self.tab_OpenFiles.setObjectName("tab_OpenFiles")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.tab_OpenFiles)
        self.horizontalLayout.setContentsMargins(20, 30, 20, 20)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.OpenFileTreeView = QtWidgets.QTreeView(self.tab_OpenFiles)
        self.OpenFileTreeView.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.OpenFileTreeView.setUniformRowHeights(True)
        self.OpenFileTreeView.setItemsExpandable(True)
        self.OpenFileTreeView.setSortingEnabled(True)
        self.OpenFileTreeView.setHeaderHidden(False)
        self.OpenFileTreeView.setObjectName("OpenFileTreeView")
        self.horizontalLayout.addWidget(self.OpenFileTreeView)
        self.tabWidget.addTab(self.tab_OpenFiles, "")
        self.tab_Connections = QtWidgets.QWidget()
        self.tab_Connections.setObjectName("tab_Connections")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.tab_Connections)
        self.verticalLayout.setContentsMargins(20, 30, 20, 20)
        self.verticalLayout.setObjectName("verticalLayout")
        self.ConnectionsTreeView = QtWidgets.QTreeView(self.tab_Connections)
        self.ConnectionsTreeView.setUniformRowHeights(True)
        self.ConnectionsTreeView.setSortingEnabled(True)
        self.ConnectionsTreeView.setObjectName("ConnectionsTreeView")
        self.verticalLayout.addWidget(self.ConnectionsTreeView)
        self.tabWidget.addTab(self.tab_Connections, "")
        self.tab_Environement = QtWidgets.QWidget()
        self.tab_Environement.setObjectName("tab_Environement")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.tab_Environement)
        self.horizontalLayout_5.setContentsMargins(20, 30, 20, 20)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.treeViewEnvironement = QtWidgets.QTreeView(self.tab_Environement)
        self.treeViewEnvironement.setUniformRowHeights(True)
        self.treeViewEnvironement.setSortingEnabled(True)
        self.treeViewEnvironement.setObjectName("treeViewEnvironement")
        self.horizontalLayout_5.addWidget(self.treeViewEnvironement)
        self.tabWidget.addTab(self.tab_Environement, "")
        self.gridLayout.addWidget(self.tabWidget, 3, 1, 1, 5)
        self.verticalLayout_2.addLayout(self.gridLayout)
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setContentsMargins(-1, 0, -1, -1)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.buttonSample = QtWidgets.QPushButton(InspectProcess)
        self.buttonSample.setObjectName("buttonSample")
        self.horizontalLayout_6.addWidget(self.buttonSample)
        self.buttonClose = QtWidgets.QPushButton(InspectProcess)
        self.buttonClose.setDefault(True)
        self.buttonClose.setObjectName("buttonClose")
        self.horizontalLayout_6.addWidget(self.buttonClose)
        spacerItem9 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem9)
        self.verticalLayout_2.addLayout(self.horizontalLayout_6)

        self.retranslateUi(InspectProcess)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(InspectProcess)

    def retranslateUi(self, InspectProcess):
        _translate = QtCore.QCoreApplication.translate
        InspectProcess.setWindowTitle(_translate("InspectProcess", "Form"))
        self.procress_group_id_label.setText(_translate("InspectProcess", "Procress Group ID:"))
        self.user_label.setText(_translate("InspectProcess", "User:"))
        self.parent_process_label.setText(_translate("InspectProcess", "Parent Process:"))
        self.cpu_percent_label.setText(_translate("InspectProcess", "% CPU:"))
        self.memory_percent_label.setText(_translate("InspectProcess", "% Memory:"))
        self.data_resident_set_size_label.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The amount of physical memory devoted to other than executable code.</p></body></html>"))
        self.data_resident_set_size_label.setText(_translate("InspectProcess", "Data Resident Set Size:"))
        self.text_resitent_set_size_label.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The amount of memory devoted to executable code. </p></body></html>"))
        self.text_resitent_set_size_label.setText(_translate("InspectProcess", "Text Resident Set Size:"))
        self.virtual_memory_size_label.setToolTip(_translate("InspectProcess", "<html><head/><body><p>This is the total amount of virtual memory used by the process. </p></body></html>"))
        self.virtual_memory_size_label.setText(_translate("InspectProcess", "Vistual Memory Size:"))
        self.resident_set_size_label.setToolTip(_translate("InspectProcess", "<html><head/><body><p>This is the non-swapped physical memory a process has used. </p></body></html>"))
        self.resident_set_size_label.setText(_translate("InspectProcess", "Resident Set Size:"))
        self.stack_size_label.setText(_translate("InspectProcess", "Stack Size:"))
        self.swapped_size_label.setToolTip(_translate("InspectProcess", "<html><head/><body><p>Amount of memory that has been swapped out to disk.</p></body></html>"))
        self.swapped_size_label.setText(_translate("InspectProcess", "Swapped Size:"))
        self.shared_libraries_size_label.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The memory used by shared libraries.</p></body></html>"))
        self.shared_libraries_size_label.setText(_translate("InspectProcess", "Shared libraries Size:"))
        self.shared_memory_size_label.setToolTip(_translate("InspectProcess", "<html><head/><body><p> Memory that could be potentially shared with other processes.</p></body></html>"))
        self.shared_memory_size_label.setText(_translate("InspectProcess", "Shared Memory Size:"))
        self.proportional_set_size_label.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The amount of memory shared with other processes, accounted in a way that the amount is divided evenly between the processes that share it. </p></body></html>"))
        self.proportional_set_size_label.setText(_translate("InspectProcess", "Proportional Set Size:"))
        self.unique_set_size_label.setToolTip(_translate("InspectProcess", "<html><head/><body><p>This is the memory which is unique to a process and which would be freed if the process was terminated right now.</p></body></html>"))
        self.unique_set_size_label.setText(_translate("InspectProcess", "Unique Set Size:"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_Memory), _translate("InspectProcess", "Memory"))
        self.cpu_time.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The amount of time this process use the CPU.</p></body></html>"))
        self.cpu_time.setText(_translate("InspectProcess", "CPU Time:"))
        self.status.setToolTip(_translate("InspectProcess", "<html><head/><body><p>Amount of memory that has been swapped out to disk.</p></body></html>"))
        self.status.setText(_translate("InspectProcess", "Status:"))
        self.context_switches.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The amount of physical memory devoted to other than executable code.</p></body></html>"))
        self.context_switches.setText(_translate("InspectProcess", "Context Switches:"))
        self.threads_number_value.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The number of threads currently used by this process</p></body></html>"))
        self.cpu_time_value.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The amount of time this process use the CPU.</p></body></html>"))
        self.threads_number.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The number of threads currently used by this process</p></body></html>"))
        self.threads_number.setText(_translate("InspectProcess", "Threads:"))
        self.nice_value.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The higher the nice value, the lower the priority of the process.</p></body></html>"))
        self.nice.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The higher the nice value, the lower the priority of the process.</p></body></html>"))
        self.nice.setText(_translate("InspectProcess", "Nice:"))
        self.fault.setToolTip(_translate("InspectProcess", "<html><head/><body><p>Number of page faults.</p></body></html>"))
        self.fault.setText(_translate("InspectProcess", "Faults:"))
        self.ports.setToolTip(_translate("InspectProcess", "<html><head/><body><p>Cumulative ports used by connections of this process. </p></body></html>"))
        self.ports.setText(_translate("InspectProcess", "Ports:"))
        self.fault_value.setToolTip(_translate("InspectProcess", "<html><head/><body><p>Number of page faults.</p></body></html>"))
        self.ports_value.setToolTip(_translate("InspectProcess", "<html><head/><body><p>Cumulative ports used by connections of this process. </p></body></html>"))
        self.file_descriptors_value.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The number of file descriptors currently opened by this process (non cumulative).</p></body></html>"))
        self.other_bytes.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The number of bytes transferred during operations other than read and write operations.</p></body></html>"))
        self.other_bytes.setText(_translate("InspectProcess", "Other Bytes:"))
        self.write_chars_value.setToolTip(_translate("InspectProcess", "<html><head/><body><p>Differently from write_bytes it doesn’t care whether or not actual physical disk I/O occurred.</p></body></html>"))
        self.pageins.setToolTip(_translate("InspectProcess", "<html><head/><body><p>Number of actual pageins</p></body></html>"))
        self.pageins.setText(_translate("InspectProcess", "Page ins:"))
        self.pageins_value.setToolTip(_translate("InspectProcess", "<html><head/><body><p>Number of actual pageins</p></body></html>"))
        self.write_count.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The number of write operations performed (cumulative).</p></body></html>"))
        self.write_count.setText(_translate("InspectProcess", "Write Count:"))
        self.read_chars.setToolTip(_translate("InspectProcess", "<html><head/><body><p>Differently from read_bytes it doesn’t care whether or not actual physical disk I/O occurred.</p></body></html>"))
        self.read_chars.setText(_translate("InspectProcess", "Read Chars:"))
        self.write_count_value.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The number of write operations performed (cumulative).</p></body></html"))
        self.file_descriptors.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The number of file descriptors currently opened by this process (non cumulative).</p></body></html>"))
        self.file_descriptors.setText(_translate("InspectProcess", "File Descriptors:"))
        self.read_bytes_value.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The number of bytes read (cumulative)</p></body></html>"))
        self.other_count.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The number of I/O operations performed other than read and write operations.</p></body></html>"))
        self.other_count.setText(_translate("InspectProcess", "Other Count:"))
        self.other_bytes_value.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The number of bytes transferred during operations other than read and write operations.</p></body></html>"))
        self.write_bytes_value.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The number of bytes written (cumulative).</p></body></html>"))
        self.read_bytes.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The number of bytes read (cumulative)</p></body></html>"))
        self.read_bytes.setText(_translate("InspectProcess", "Read Bytes:"))
        self.read_count_value.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The number of read operations performed (cumulative).</p></body></html>"))
        self.other_count_value.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The number of I/O operations performed other than read and write operations.</p></body></html>"))
        self.write_chars.setToolTip(_translate("InspectProcess", "<html><head/><body><p>Differently from write_bytes it doesn’t care whether or not actual physical disk I/O occurred.</p></body></html>"))
        self.write_chars.setText(_translate("InspectProcess", "Write Chars:"))
        self.write_bytes.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The number of bytes written (cumulative).</p></body></html>"))
        self.write_bytes.setText(_translate("InspectProcess", "Write Bytes:"))
        self.read_count.setToolTip(_translate("InspectProcess", "<html><head/><body><p>The number of read operations performed (cumulative).</p></body></html>"))
        self.read_count.setText(_translate("InspectProcess", "Read Count:"))
        self.read_chars_value.setToolTip(_translate("InspectProcess", "<html><head/><body><p>Differently from read_bytes it doesn’t care whether or not actual physical disk I/O occurred.</p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("InspectProcess", "Statistics"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_Maps), _translate("InspectProcess", "Maps"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_OpenFiles), _translate("InspectProcess", "Open Files"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_Connections), _translate("InspectProcess", "Connections"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_Environement), _translate("InspectProcess", "Environement"))
        self.buttonSample.setText(_translate("InspectProcess", "Sample"))
        self.buttonClose.setText(_translate("InspectProcess", "Close"))
